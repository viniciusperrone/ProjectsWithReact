[{"C:\\Users\\perro\\OneDrive\\Área de Trabalho\\ProjectsWithReact\\animes\\src\\index.js":"1","C:\\Users\\perro\\OneDrive\\Área de Trabalho\\ProjectsWithReact\\animes\\src\\App.js":"2","C:\\Users\\perro\\OneDrive\\Área de Trabalho\\ProjectsWithReact\\animes\\src\\InputSearch.js":"3"},{"size":411,"mtime":1611831417420,"results":"4","hashOfConfig":"5"},{"size":844,"mtime":1611834003117,"results":"6","hashOfConfig":"5"},{"size":274,"mtime":1611832204450,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p4d80e",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\perro\\OneDrive\\Área de Trabalho\\ProjectsWithReact\\animes\\src\\index.js",[],"C:\\Users\\perro\\OneDrive\\Área de Trabalho\\ProjectsWithReact\\animes\\src\\App.js",["15"],"import React, { useState, useEffect } from 'react';\n\nimport InputSearch from './InputSearch';\n\nconst api = 'https://kitsu.io/api/edge/';\nconst App = () => {\n\n  const [info, setInfo] = useState({});\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    if(name){\n      fetch(`${api}anime?filter[text]=${name}`)\n      .then((response) => response.json())\n      .then((response) => {\n        setInfo(response)\n        \n      })\n    }\n  }, [name]);\n  return (\n    <div className=\"App\">\n      <h1>Animes {name}</h1>\n      <InputSearch value={name} onChange={(search) => setName(search)} />\n      {\n        info.data && (\n          <ul>\n            {info.data.map((anime) =>  {\n              <li key={anime.id}>{anime.attributes.canonicalTitle}</li>\n            })}\n          </ul>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\perro\\OneDrive\\Área de Trabalho\\ProjectsWithReact\\animes\\src\\InputSearch.js",[],{"ruleId":"16","severity":1,"message":"17","line":28,"column":36,"nodeType":"18","messageId":"19","endLine":28,"endColumn":38},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]